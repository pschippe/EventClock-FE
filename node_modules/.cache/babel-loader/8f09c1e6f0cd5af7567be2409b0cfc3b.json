{"ast":null,"code":"import _classCallCheck from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/src/components/Countdown.js\";\nimport React, { Component } from \"react\";\n\nvar Countdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Countdown, _Component);\n\n  function Countdown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Countdown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Countdown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0,\n      inputHrs: 0,\n      inputMin: 0,\n      inputSec: 0,\n      pulledTime: {}\n    };\n\n    _this.preStart = function () {\n      //TODO: Pass time entered from the parent to here, then convert returned time into Milliseconds\n      _this.setState({\n        pulledTime: _this.props.time,\n        timerTime: _this.convertTime(_this.props.time)\n      }, function () {\n        window.setTimeout(function () {\n          _this.startTimer();\n        }, 2000);\n      });\n\n      console.log(_this.props.time); //After retreaving time, need to setthe time and finally call to the start timer function\n    };\n\n    _this.startTimer = function () {\n      _this.setState({\n        timerOn: true,\n        timerTime: _this.state.timerTime,\n        timerStart: _this.state.timerTime\n      });\n\n      _this.timer = setInterval(function () {\n        var newTime = _this.state.timerTime - 10;\n\n        if (newTime >= 0) {\n          _this.setState({\n            timerTime: newTime\n          });\n        } else {\n          clearInterval(_this.timer);\n\n          _this.setState({\n            timerOn: false\n          });\n\n          alert(\"Countdown Ended\");\n        }\n      }, 10);\n    };\n\n    _this.stopTimer = function () {\n      clearInterval(_this.timer);\n\n      _this.setState({\n        timerOn: false\n      });\n    };\n\n    _this.resetTimer = function () {\n      // if (this.state.timerOn === false) {\n      _this.setState({\n        timerTime: _this.state.timerStart\n      }); // }\n\n    };\n\n    _this.adjustTimer = function (input) {\n      var _this$state = _this.state,\n          timerTime = _this$state.timerTime,\n          timerOn = _this$state.timerOn;\n      var max = 216000000;\n\n      if (!timerOn) {\n        if (input === \"incHours\" && timerTime + 3600000 < max) {\n          _this.setState({\n            timerTime: timerTime + 3600000\n          });\n        } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n          _this.setState({\n            timerTime: timerTime - 3600000\n          });\n        } else if (input === \"incMinutes\" && timerTime + 60000 < max) {\n          _this.setState({\n            timerTime: timerTime + 60000\n          });\n        } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n          _this.setState({\n            timerTime: timerTime - 60000\n          });\n        } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\n          _this.setState({\n            timerTime: timerTime + 1000\n          });\n        } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n          _this.setState({\n            timerTime: timerTime - 1000\n          });\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Countdown, [{\n    key: \"convertTime\",\n    value: function convertTime(timeObj) {\n      var finalTime = 0;\n\n      if (timeObj.inputHrs > 0) {\n        var hoursToMills = 1000 * 60 * 60 * 60;\n        finalTime = finalTime + timeObj.inputHrs * hoursToMills;\n      }\n\n      if (timeObj.inputMin > 0) {\n        var minutesToMills = 1000 * 60 * 60;\n        finalTime = finalTime + timeObj.inputMin * minutesToMills;\n      }\n\n      if (timeObj.inputSec > 0) {\n        var secondsToMills = 1000 * 60;\n        finalTime = finalTime + timeObj.inputSec * secondsToMills;\n      }\n\n      return finalTime;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          timerTime = _this$state2.timerTime,\n          timerStart = _this$state2.timerStart,\n          timerOn = _this$state2.timerOn;\n      var seconds = (\"0\" + Math.floor(timerTime / 1000 % 60) % 60).slice(-2);\n      var minutes = (\"0\" + Math.floor(timerTime / 60000 % 60)).slice(-2);\n      var hours = (\"0\" + Math.floor(timerTime / 3600000 % 60)).slice(-2);\n      return React.createElement(\"div\", {\n        className: \"Countdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, JSON.stringify(this.state.pulledTime)), React.createElement(\"div\", {\n        className: \"Countdown-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Countdown\"), React.createElement(\"div\", {\n        className: \"Countdown-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Hours : Minutes : Seconds\"), React.createElement(\"div\", {\n        className: \"Countdown-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.adjustTimer(\"incHours\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"\\u21E7\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.adjustTimer(\"incMinutes\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"\\u21E7\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.adjustTimer(\"incSeconds\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"\\u21E7\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.adjustTimer(\"decHours\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"\\u21E9\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.adjustTimer(\"decMinutes\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"\\u21E9\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.adjustTimer(\"decSeconds\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"\\u21E9\")), React.createElement(\"div\", {\n        className: \"Countdown-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.state.inputHrs, \" : \", this.state.inputMin, \" : \", this.state.inputSec), timerOn === false && (timerStart === 0 || timerTime === timerStart) && React.createElement(\"button\", {\n        onClick: this.preStart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Start\"), timerOn === true && timerTime >= 1000 && React.createElement(\"button\", {\n        onClick: this.stopTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Stop\"), timerOn === false && timerStart !== 0 && timerStart !== timerTime && timerTime !== 0 && React.createElement(\"button\", {\n        onClick: this.startTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Resume\"), (timerOn === false || timerTime < 1000) && React.createElement(\"button\", {\n        onClick: this.resetTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Reset\"));\n    }\n  }]);\n\n  return Countdown;\n}(Component);\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/src/components/Countdown.js"],"names":["React","Component","Countdown","state","timerOn","timerStart","timerTime","inputHrs","inputMin","inputSec","pulledTime","preStart","setState","props","time","convertTime","window","setTimeout","startTimer","console","log","timer","setInterval","newTime","clearInterval","alert","stopTimer","resetTimer","adjustTimer","input","max","timeObj","finalTime","hoursToMills","minutesToMills","secondsToMills","seconds","Math","floor","slice","minutes","hours","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Countdown extends Component {\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0,\n    inputHrs: 0,\n    inputMin: 0,\n    inputSec: 0,\n    pulledTime: {}\n  };\n\n  preStart = () => {\n    //TODO: Pass time entered from the parent to here, then convert returned time into Milliseconds\n    this.setState({\n      pulledTime: this.props.time,\n      timerTime: this.convertTime(this.props.time)\n    }, () => {\n      window.setTimeout(() => {this.startTimer()}, 2000);\n    })\n    console.log(this.props.time);\n    //After retreaving time, need to setthe time and finally call to the start timer function\n  }\n\n  convertTime(timeObj) {\n    let finalTime = 0;\n    if (timeObj.inputHrs > 0) {\n      const hoursToMills = 1000 * 60 * 60 * 60;\n      finalTime = finalTime + (timeObj.inputHrs * hoursToMills);\n    }\n    if (timeObj.inputMin > 0) {\n      const minutesToMills = 1000 * 60 * 60;\n      finalTime = finalTime + (timeObj.inputMin * minutesToMills);\n    }\n    if (timeObj.inputSec > 0) {\n      const secondsToMills = 1000 * 60;\n      finalTime = finalTime + (timeObj.inputSec * secondsToMills);\n    }\n    return finalTime;\n  }\n\n  startTimer = () => {\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: this.state.timerTime\n    });\n    this.timer = setInterval(() => {\n      const newTime = this.state.timerTime - 10;\n      if (newTime >= 0) {\n        this.setState({\n          timerTime: newTime\n        });\n      } else {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false });\n        alert(\"Countdown Ended\");\n      }\n    }, 10);\n  };\n\n  stopTimer = () => {\n    clearInterval(this.timer);\n    this.setState({ timerOn: false });\n  };\n\n  resetTimer = () => {\n    // if (this.state.timerOn === false) {\n    this.setState({\n      timerTime: this.state.timerStart\n    });\n    // }\n  };\n\n  adjustTimer = input => {\n    const { timerTime, timerOn } = this.state;\n    const max = 216000000;\n\n    if (!timerOn) {\n      if (input === \"incHours\" && timerTime + 3600000 < max) {\n        this.setState({ timerTime: timerTime + 3600000 });\n      } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n        this.setState({ timerTime: timerTime - 3600000 });\n      } else if (input === \"incMinutes\" && timerTime + 60000 < max) {\n        this.setState({ timerTime: timerTime + 60000 });\n      } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n        this.setState({ timerTime: timerTime - 60000 });\n      } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\n        this.setState({ timerTime: timerTime + 1000 });\n      } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n        this.setState({ timerTime: timerTime - 1000 });\n      }\n    }\n  };\n\n  render() {\n    const { timerTime, timerStart, timerOn } = this.state;\n    let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\n    let minutes = (\"0\" + Math.floor((timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor((timerTime / 3600000) % 60)).slice(-2);\n\n    return (\n      <div className=\"Countdown\">\n        <p>{JSON.stringify(this.state.pulledTime)}</p>\n        <div className=\"Countdown-header\">Countdown</div>\n        <div className=\"Countdown-label\">Hours : Minutes : Seconds</div>\n        <div className=\"Countdown-display\">\n          <button onClick={() => this.adjustTimer(\"incHours\")}>&#8679;</button>\n          <button onClick={() => this.adjustTimer(\"incMinutes\")}>\n            &#8679;\n          </button>\n          <button onClick={() => this.adjustTimer(\"incSeconds\")}>\n            &#8679;\n          </button>\n          <button onClick={() => this.adjustTimer(\"decHours\")}>&#8681;</button>\n          <button onClick={() => this.adjustTimer(\"decMinutes\")}>\n            &#8681;\n          </button>\n          <button onClick={() => this.adjustTimer(\"decSeconds\")}>\n            &#8681;\n          </button>\n        </div>\n        <div className=\"Countdown-time\">\n          {this.state.inputHrs} : {this.state.inputMin} : {this.state.inputSec}\n        </div>\n        {timerOn === false &&\n          (timerStart === 0 || timerTime === timerStart) && (\n            <button onClick={this.preStart}>Start</button>\n          )}\n        {timerOn === true && timerTime >= 1000 && (\n          <button onClick={this.stopTimer}>Stop</button>\n        )}\n        {timerOn === false &&\n          (timerStart !== 0 && timerStart !== timerTime && timerTime !== 0) && (\n            <button onClick={this.startTimer}>Resume</button>\n          )}\n        {(timerOn === false || timerTime < 1000) && (\n          <button onClick={this.resetTimer}>Reset</button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Countdown;\n"]},"metadata":{},"sourceType":"module"}