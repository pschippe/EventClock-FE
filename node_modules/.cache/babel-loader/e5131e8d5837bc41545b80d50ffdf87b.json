{"ast":null,"code":"import _classCallCheck from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/src/components/MasterCountdown.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport mapReduxStoreToProps from '../redux/mapReduxStoreToProps';\n\nvar MasterCountdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MasterCountdown, _Component);\n\n  function MasterCountdown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MasterCountdown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MasterCountdown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.startTimer = function () {\n      _this.props.dispatch({\n        type: 'MASTER_TIMER_SET_ALL',\n        payload: {\n          timerOn: true,\n          timerCount: _this.props.store.currentTime.timerTime,\n          timerStart: _this.props.store.currentTime.timerTime\n        }\n      }); // Controls timing delay for clock start\n\n\n      window.setTimeout(function () {\n        _this.createTimerInterval();\n      }, 2000);\n    };\n\n    _this.holdTimer = function () {\n      clearInterval(_this.timer);\n\n      _this.props.dispatch({\n        type: 'MASTER_TIMER_SET_ALL',\n        payload: {\n          timerOn: true,\n          timerCount: _this.props.store.currentTime.timerTime,\n          timerStart: _this.props.store.currentTime.timerTime\n        }\n      });\n    };\n\n    _this.stopTimer = function () {\n      clearInterval(_this.timer);\n\n      _this.props.dispatch({\n        type: 'MASTER_TIMER_ON',\n        payload: false\n      });\n    };\n\n    _this.resetTimer = function () {\n      _this.props.dispatch({\n        type: 'MASTER_TIMER_COUNT',\n        payload: _this.props.store.masterTime.timerStart\n      });\n    };\n\n    _this.resumeTimer = function () {\n      _this.props.dispatch({\n        type: 'MASTER_TIMER_ON',\n        payload: true\n      });\n\n      _this.createTimerInterval();\n    };\n\n    return _this;\n  }\n\n  _createClass(MasterCountdown, [{\n    key: \"createTimerInterval\",\n    value: function createTimerInterval() {\n      var _this2 = this;\n\n      this.timer = setInterval(function () {\n        var newTime = _this2.props.store.masterTime.timerCount - 10;\n\n        if (newTime >= 0) {\n          _this2.props.dispatch({\n            type: 'MASTER_TIMER_COUNT',\n            payload: newTime\n          });\n        } else {\n          clearInterval(_this2.timer);\n\n          _this2.props.dispatch({\n            type: 'MASTER_TIMER_ON',\n            payload: false\n          });\n\n          alert(\"Master Countdown Ended\");\n        }\n      }, 10);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.startTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"button\", {\n        onClick: this.holdTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Hold\"), React.createElement(\"button\", {\n        onClick: this.stopTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Stop\"), React.createElement(\"button\", {\n        onClick: this.startTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Resume\"), React.createElement(\"button\", {\n        onClick: this.resetTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Reset\"));\n    }\n  }]);\n\n  return MasterCountdown;\n}(Component);\n\nexport default connect(mapReduxStoreToProps)(MasterCountdown);","map":{"version":3,"sources":["/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/src/components/MasterCountdown.js"],"names":["React","Component","connect","mapReduxStoreToProps","MasterCountdown","startTimer","props","dispatch","type","payload","timerOn","timerCount","store","currentTime","timerTime","timerStart","window","setTimeout","createTimerInterval","holdTimer","clearInterval","timer","stopTimer","resetTimer","masterTime","resumeTimer","setInterval","newTime","alert"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport mapReduxStoreToProps from '../redux/mapReduxStoreToProps';\n\nclass MasterCountdown extends Component {\n    createTimerInterval () {\n        this.timer = setInterval(() => {\n            const newTime = this.props.store.masterTime.timerCount - 10;\n            if (newTime >= 0) {\n                this.props.dispatch({\n                    type: 'MASTER_TIMER_COUNT',\n                    payload: newTime\n                });\n            } else {\n                clearInterval(this.timer);\n                this.props.dispatch({ \n                    type: 'MASTER_TIMER_ON',\n                    payload: false\n                });\n                alert(\"Master Countdown Ended\");\n            }\n        }, 10);\n    };\n    \n    startTimer = () => {\n        this.props.dispatch({\n            type: 'MASTER_TIMER_SET_ALL',\n            payload: {\n                timerOn: true,\n                timerCount: this.props.store.currentTime.timerTime,\n                timerStart: this.props.store.currentTime.timerTime\n            }\n        });\n        // Controls timing delay for clock start\n        window.setTimeout(() => {\n            this.createTimerInterval();        \n        }, 2000);\n    };\n\n    holdTimer = () => {\n        clearInterval(this.timer);\n        this.props.dispatch({\n            type: 'MASTER_TIMER_SET_ALL',\n            payload: {\n                timerOn: true,\n                timerCount: this.props.store.currentTime.timerTime,\n                timerStart: this.props.store.currentTime.timerTime   \n            }\n        });\n    };\n    \n    stopTimer = () => {\n        clearInterval(this.timer);\n        this.props.dispatch({ \n            type: 'MASTER_TIMER_ON',\n            payload: false\n        });\n    };\n\n    resetTimer = () => {\n        this.props.dispatch({\n            type: 'MASTER_TIMER_COUNT',\n            payload: this.props.store.masterTime.timerStart\n        });\n    };\n\n    resumeTimer = () => {\n        this.props.dispatch({\n            type: 'MASTER_TIMER_ON',\n            payload: true\n        });\n        this.createTimerInterval();\n    }\n\n    render (){\n        return (\n            <div>\n                <button onClick={this.startTimer}>Start</button>\n                <button onClick={this.holdTimer}>Hold</button>\n                <button onClick={this.stopTimer}>Stop</button>\n                <button onClick={this.startTimer}>Resume</button>\n                <button onClick={this.resetTimer}>Reset</button>\n            </div>\n        );\n    }\n}\nexport default connect(mapReduxStoreToProps)(MasterCountdown);"]},"metadata":{},"sourceType":"module"}