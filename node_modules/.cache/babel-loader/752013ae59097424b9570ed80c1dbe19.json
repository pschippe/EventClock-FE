{"ast":null,"code":"import _classCallCheck from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/src/components/MasterCountdown.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport mapReduxStoreToProps from '../redux/mapReduxStoreToProps';\n\nvar MasterCountdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MasterCountdown, _Component);\n\n  function MasterCountdown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MasterCountdown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MasterCountdown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.startTimer = function () {\n      _this.setState({\n        timerOn: true,\n        // timerTime: this.state.timerTime,\n        timerStart: _this.state.timerTime\n      });\n\n      console.log(_this.state.timerStart);\n      _this.timer = setInterval(function () {\n        var newTime = _this.state.timerTime - 10;\n\n        if (newTime >= 0) {\n          _this.setState({\n            timerTime: newTime\n          });\n        } else {\n          clearInterval(_this.timer);\n\n          _this.setState({\n            timerOn: false\n          });\n\n          alert(\"Countdown Ended\");\n        }\n      }, 10);\n    };\n\n    _this.stopTimer = function () {\n      clearInterval(_this.timer);\n\n      _this.setState({\n        timerOn: false\n      });\n    };\n\n    _this.resetTimer = function () {\n      _this.setState({\n        timerTime: _this.state.timerStart\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MasterCountdown, [{\n    key: \"startForMaster\",\n    value: function startForMaster() {\n      this.props.resetMasterCallback();\n      this.preStart();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.startTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"button\", {\n        onClick: this.stopTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Stop\"), React.createElement(\"button\", {\n        onClick: this.startTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Resume\"), React.createElement(\"button\", {\n        onClick: this.resetTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Reset\"));\n    }\n  }]);\n\n  return MasterCountdown;\n}(Component);\n\nexport default connect(mapReduxStoreToProps)(MasterCountdown);","map":{"version":3,"sources":["/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/src/components/MasterCountdown.js"],"names":["React","Component","connect","mapReduxStoreToProps","MasterCountdown","startTimer","setState","timerOn","timerStart","state","timerTime","console","log","timer","setInterval","newTime","clearInterval","alert","stopTimer","resetTimer","props","resetMasterCallback","preStart"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;;IAEMC,e;;;;;;;;;;;;;;;;;;UACFC,U,GAAa,YAAM;AACf,YAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE,IADC;AAEV;AACAC,QAAAA,UAAU,EAAE,MAAKC,KAAL,CAAWC;AAHb,OAAd;;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKH,KAAL,CAAWD,UAAvB;AACA,YAAKK,KAAL,GAAaC,WAAW,CAAC,YAAM;AAC3B,YAAMC,OAAO,GAAG,MAAKN,KAAL,CAAWC,SAAX,GAAuB,EAAvC;;AACA,YAAIK,OAAO,IAAI,CAAf,EAAkB;AAClB,gBAAKT,QAAL,CAAc;AACVI,YAAAA,SAAS,EAAEK;AADD,WAAd;AAGC,SAJD,MAIO;AACHC,UAAAA,aAAa,CAAC,MAAKH,KAAN,CAAb;;AACA,gBAAKP,QAAL,CAAc;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAAd;;AACAU,UAAAA,KAAK,CAAC,iBAAD,CAAL;AACH;AACJ,OAXuB,EAWrB,EAXqB,CAAxB;AAYH,K;;UAEDC,S,GAAY,YAAM;AACdF,MAAAA,aAAa,CAAC,MAAKH,KAAN,CAAb;;AACA,YAAKP,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,K;;UAEDY,U,GAAa,YAAM;AACf,YAAKb,QAAL,CAAc;AACVI,QAAAA,SAAS,EAAE,MAAKD,KAAL,CAAWD;AADZ,OAAd;AAGH,K;;;;;;;qCAEgB;AACb,WAAKY,KAAL,CAAWC,mBAAX;AACA,WAAKC,QAAL;AACH;;;6BACQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKjB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAQ,QAAA,OAAO,EAAE,KAAKa,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI;AAAQ,QAAA,OAAO,EAAE,KAAKb,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAII;AAAQ,QAAA,OAAO,EAAE,KAAKc,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CADJ;AAQH;;;;EA9CyBlB,S;;AAgD9B,eAAeC,OAAO,CAACC,oBAAD,CAAP,CAA8BC,eAA9B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport mapReduxStoreToProps from '../redux/mapReduxStoreToProps';\n\nclass MasterCountdown extends Component {\n    startTimer = () => {\n        this.setState({\n            timerOn: true,\n            // timerTime: this.state.timerTime,\n            timerStart: this.state.timerTime\n        });\n        console.log(this.state.timerStart);\n        this.timer = setInterval(() => {\n            const newTime = this.state.timerTime - 10;\n            if (newTime >= 0) {\n            this.setState({\n                timerTime: newTime\n            });\n            } else {\n                clearInterval(this.timer);\n                this.setState({ timerOn: false });\n                alert(\"Countdown Ended\");\n            }\n        }, 10);\n    };\n    \n    stopTimer = () => {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false });\n    };\n\n    resetTimer = () => {\n        this.setState({\n            timerTime: this.state.timerStart\n        });\n    };\n\n    startForMaster() {\n        this.props.resetMasterCallback();\n        this.preStart();\n    }\n    render (){\n        return (\n            <div>\n                <button onClick={this.startTimer}>Start</button>\n                <button onClick={this.stopTimer}>Stop</button>\n                <button onClick={this.startTimer}>Resume</button>\n                <button onClick={this.resetTimer}>Reset</button>\n            </div>\n        );\n    }\n}\nexport default connect(mapReduxStoreToProps)(MasterCountdown);"]},"metadata":{},"sourceType":"module"}