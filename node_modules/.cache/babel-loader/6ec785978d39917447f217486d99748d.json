{"ast":null,"code":"import _classCallCheck from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/src/components/Countdown.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport mapReduxStoreToProps from '../redux/mapReduxStoreToProps';\n\nvar Countdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Countdown, _Component);\n\n  function Countdown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Countdown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Countdown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0,\n      inputHrs: 0,\n      inputMin: 0,\n      inputSec: 0\n    };\n\n    _this.preStart = function () {\n      _this.setState({\n        timerTime: _this.convertTime(_this.props.time)\n      });\n\n      console.log(_this.props.time);\n    };\n\n    _this.startTimer = function () {\n      _this.setState({\n        timerOn: true,\n        // timerTime: this.state.timerTime,\n        timerStart: _this.state.timerTime\n      });\n\n      console.log(_this.state.timerStart);\n      _this.timer = setInterval(function () {\n        var newTime = _this.state.timerTime - 10;\n\n        if (newTime >= 0) {\n          _this.setState({\n            timerTime: newTime\n          });\n        } else {\n          clearInterval(_this.timer);\n\n          _this.setState({\n            timerOn: false\n          });\n\n          alert(\"Countdown Ended\");\n        }\n      }, 10);\n    };\n\n    _this.stopTimer = function () {\n      clearInterval(_this.timer);\n\n      _this.setState({\n        timerOn: false\n      });\n    };\n\n    _this.resetTimer = function () {\n      // if (this.state.timerOn === false) {\n      _this.setState({\n        timerTime: _this.state.timerStart\n      }); // }\n\n    };\n\n    return _this;\n  }\n\n  _createClass(Countdown, [{\n    key: \"startForMaster\",\n    value: function startForMaster() {\n      this.props.resetMasterCallback();\n      this.preStart();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          timerTime = _this$state.timerTime,\n          timerStart = _this$state.timerStart,\n          timerOn = _this$state.timerOn;\n\n      if (this.props.masterStart === true) {\n        this.startForMaster();\n      }\n\n      var seconds = (\"0\" + Math.floor(timerTime / 1000 % 60) % 60).slice(-2);\n      var minutes = (\"0\" + Math.floor(timerTime / 60000 % 60)).slice(-2);\n      var hours = (\"0\" + Math.floor(timerTime / 3600000 % 60)).slice(-2);\n      return React.createElement(\"div\", {\n        className: \"Countdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Countdown-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Countdown\"), React.createElement(\"div\", {\n        className: \"Countdown-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Hours : Minutes : Seconds\"), React.createElement(\"div\", {\n        className: \"Countdown-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, hours, \" : \", minutes, \" : \", seconds), timerOn === false && (timerStart === 0 || timerTime === timerStart) && React.createElement(\"button\", {\n        onClick: this.preStart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Start\"), timerOn === true && timerTime >= 1000 && React.createElement(\"button\", {\n        onClick: this.stopTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Stop\"), timerOn === false && timerStart !== 0 && timerStart !== timerTime && timerTime !== 0 && React.createElement(\"button\", {\n        onClick: this.startTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Resume\"), (timerOn === false || timerTime < 1000) && React.createElement(\"button\", {\n        onClick: this.resetTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Reset\"));\n    }\n  }]);\n\n  return Countdown;\n}(Component);\n\nexport default connect(mapReduxStoreToProps)(Countdown);","map":{"version":3,"sources":["/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/src/components/Countdown.js"],"names":["React","Component","connect","mapReduxStoreToProps","Countdown","state","timerOn","timerStart","timerTime","inputHrs","inputMin","inputSec","preStart","setState","convertTime","props","time","console","log","startTimer","timer","setInterval","newTime","clearInterval","alert","stopTimer","resetTimer","resetMasterCallback","masterStart","startForMaster","seconds","Math","floor","slice","minutes","hours"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport mapReduxStoreToProps from '../redux/mapReduxStoreToProps';\n\nclass Countdown extends Component {\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0,\n    inputHrs: 0,\n    inputMin: 0,\n    inputSec: 0,\n  };\n\n  preStart = () => {\n    this.setState({\n      timerTime: this.convertTime(this.props.time)\n    })\n    console.log(this.props.time);\n  }\n\n  // convertTime(timeObj) {\n  //   let finalTime = 0;\n  //   if (timeObj.inputHrs > 0) {\n  //     const hoursToMills = 1000 * 60 * 60;\n  //     finalTime = finalTime + (timeObj.inputHrs * hoursToMills);\n  //   }\n  //   if (timeObj.inputMin > 0) {\n  //     const minutesToMills = 1000 * 60;\n  //     finalTime = finalTime + (timeObj.inputMin * minutesToMills);\n  //   }\n  //   if (timeObj.inputSec > 0) {\n  //     const secondsToMills = 1000;\n  //     finalTime = finalTime + (timeObj.inputSec * secondsToMills);\n  //   }\n  //   return finalTime;\n  // }\n\n  startTimer = () => {\n    this.setState({\n      timerOn: true,\n      // timerTime: this.state.timerTime,\n      timerStart: this.state.timerTime\n    });\n    console.log(this.state.timerStart);\n    this.timer = setInterval(() => {\n      const newTime = this.state.timerTime - 10;\n      if (newTime >= 0) {\n        this.setState({\n          timerTime: newTime\n        });\n      } else {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false });\n        alert(\"Countdown Ended\");\n      }\n    }, 10);\n  };\n\n  stopTimer = () => {\n    clearInterval(this.timer);\n    this.setState({ timerOn: false });\n  };\n\n  resetTimer = () => {\n    // if (this.state.timerOn === false) {\n    this.setState({\n      timerTime: this.state.timerStart\n    });\n    // }\n  };\n\n  startForMaster() {\n    this.props.resetMasterCallback();\n    this.preStart();\n  }\n\n  render() {\n    let { timerTime, timerStart, timerOn } = this.state;\n\n    if (this.props.masterStart === true) {\n      this.startForMaster();\n    }\n    \n    let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\n    let minutes = (\"0\" + Math.floor((timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor((timerTime / 3600000) % 60)).slice(-2);\n\n    return (\n      <div className=\"Countdown\">\n        <div className=\"Countdown-header\">Countdown</div>\n        <div className=\"Countdown-label\">Hours : Minutes : Seconds</div>\n        <div className=\"Countdown-time\">\n          {hours} : {minutes} : {seconds}\n        </div>\n        {timerOn === false &&\n          (timerStart === 0 || timerTime === timerStart) && (\n            <button onClick={this.preStart}>Start</button>\n          )}\n        {timerOn === true && timerTime >= 1000 && (\n          <button onClick={this.stopTimer}>Stop</button>\n        )}\n        {timerOn === false &&\n          (timerStart !== 0 && timerStart !== timerTime && timerTime !== 0) && (\n            <button onClick={this.startTimer}>Resume</button>\n          )}\n        {(timerOn === false || timerTime < 1000) && (\n          <button onClick={this.resetTimer}>Reset</button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapReduxStoreToProps)(Countdown);\n"]},"metadata":{},"sourceType":"module"}