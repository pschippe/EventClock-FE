{"ast":null,"code":"import _classCallCheck from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/src/components/MasterCountdown.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport mapReduxStoreToProps from '../redux/mapReduxStoreToProps';\n\nvar MasterCountdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MasterCountdown, _Component);\n\n  function MasterCountdown() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MasterCountdown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MasterCountdown)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.startTimer = function () {\n      _this.props.dispatch({\n        type: 'MASTER_TIMER_SET_ALL',\n        payload: {\n          timerOn: true,\n          timerCount: _this.props.store.currentTime.timerTime,\n          timerStart: _this.props.store.currentTime.timerTime\n        }\n      });\n\n      console.log(_this.state.timerStart);\n      _this.timer = setInterval(function () {\n        var newTime = _this.props.store.masterTime.timerCount - 10;\n\n        if (newTime >= 0) {\n          _this.props.dispatch({\n            type: 'MASTER_TIMER_COUNT',\n            payload: newTime\n          });\n        } else {\n          clearInterval(_this.timer);\n\n          _this.setState({\n            timerOn: false\n          });\n\n          alert(\"Countdown Ended\");\n        }\n      }, 10);\n    };\n\n    _this.stopTimer = function () {\n      clearInterval(_this.timer);\n\n      _this.setState({\n        timerOn: false\n      });\n    };\n\n    _this.resetTimer = function () {\n      _this.setState({\n        timerTime: _this.state.timerStart\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MasterCountdown, [{\n    key: \"startForMaster\",\n    value: function startForMaster() {\n      this.props.resetMasterCallback();\n      this.preStart();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.startTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"button\", {\n        onClick: this.stopTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Stop\"), React.createElement(\"button\", {\n        onClick: this.startTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Resume\"), React.createElement(\"button\", {\n        onClick: this.resetTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Reset\"));\n    }\n  }]);\n\n  return MasterCountdown;\n}(Component);\n\nexport default connect(mapReduxStoreToProps)(MasterCountdown);","map":{"version":3,"sources":["/Users/patrickschippers/DEV/SideProj/ClockControl/sandBox/EventClock-FE/src/components/MasterCountdown.js"],"names":["React","Component","connect","mapReduxStoreToProps","MasterCountdown","startTimer","props","dispatch","type","payload","timerOn","timerCount","store","currentTime","timerTime","timerStart","console","log","state","timer","setInterval","newTime","masterTime","clearInterval","setState","alert","stopTimer","resetTimer","resetMasterCallback","preStart"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;;IAEMC,e;;;;;;;;;;;;;;;;;;UACFC,U,GAAa,YAAM;AACf,YAAKC,KAAL,CAAWC,QAAX,CAAoB;AAChBC,QAAAA,IAAI,EAAE,sBADU;AAEhBC,QAAAA,OAAO,EAAE;AACLC,UAAAA,OAAO,EAAE,IADJ;AAELC,UAAAA,UAAU,EAAE,MAAKL,KAAL,CAAWM,KAAX,CAAiBC,WAAjB,CAA6BC,SAFpC;AAGLC,UAAAA,UAAU,EAAE,MAAKT,KAAL,CAAWM,KAAX,CAAiBC,WAAjB,CAA6BC;AAHpC;AAFO,OAApB;;AASAE,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWH,UAAvB;AACA,YAAKI,KAAL,GAAaC,WAAW,CAAC,YAAM;AAC3B,YAAMC,OAAO,GAAG,MAAKf,KAAL,CAAWM,KAAX,CAAiBU,UAAjB,CAA4BX,UAA5B,GAAyC,EAAzD;;AACA,YAAIU,OAAO,IAAI,CAAf,EAAkB;AACd,gBAAKf,KAAL,CAAWC,QAAX,CAAoB;AAChBC,YAAAA,IAAI,EAAE,oBADU;AAEhBC,YAAAA,OAAO,EAAEY;AAFO,WAApB;AAIH,SALD,MAKO;AACHE,UAAAA,aAAa,CAAC,MAAKJ,KAAN,CAAb;;AACA,gBAAKK,QAAL,CAAc;AAAEd,YAAAA,OAAO,EAAE;AAAX,WAAd;;AACAe,UAAAA,KAAK,CAAC,iBAAD,CAAL;AACH;AACJ,OAZuB,EAYrB,EAZqB,CAAxB;AAaH,K;;UAEDC,S,GAAY,YAAM;AACdH,MAAAA,aAAa,CAAC,MAAKJ,KAAN,CAAb;;AACA,YAAKK,QAAL,CAAc;AAAEd,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,K;;UAEDiB,U,GAAa,YAAM;AACf,YAAKH,QAAL,CAAc;AACVV,QAAAA,SAAS,EAAE,MAAKI,KAAL,CAAWH;AADZ,OAAd;AAGH,K;;;;;;;qCAEgB;AACb,WAAKT,KAAL,CAAWsB,mBAAX;AACA,WAAKC,QAAL;AACH;;;6BACQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKxB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAQ,QAAA,OAAO,EAAE,KAAKqB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI;AAAQ,QAAA,OAAO,EAAE,KAAKrB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAII;AAAQ,QAAA,OAAO,EAAE,KAAKsB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CADJ;AAQH;;;;EAnDyB1B,S;;AAqD9B,eAAeC,OAAO,CAACC,oBAAD,CAAP,CAA8BC,eAA9B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport mapReduxStoreToProps from '../redux/mapReduxStoreToProps';\n\nclass MasterCountdown extends Component {\n    startTimer = () => {\n        this.props.dispatch({\n            type: 'MASTER_TIMER_SET_ALL',\n            payload: {\n                timerOn: true,\n                timerCount: this.props.store.currentTime.timerTime,\n                timerStart: this.props.store.currentTime.timerTime\n            }\n        });\n        \n        console.log(this.state.timerStart);\n        this.timer = setInterval(() => {\n            const newTime = this.props.store.masterTime.timerCount - 10;\n            if (newTime >= 0) {\n                this.props.dispatch({\n                    type: 'MASTER_TIMER_COUNT',\n                    payload: newTime\n                });\n            } else {\n                clearInterval(this.timer);\n                this.setState({ timerOn: false });\n                alert(\"Countdown Ended\");\n            }\n        }, 10);\n    };\n    \n    stopTimer = () => {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false });\n    };\n\n    resetTimer = () => {\n        this.setState({\n            timerTime: this.state.timerStart\n        });\n    };\n\n    startForMaster() {\n        this.props.resetMasterCallback();\n        this.preStart();\n    }\n    render (){\n        return (\n            <div>\n                <button onClick={this.startTimer}>Start</button>\n                <button onClick={this.stopTimer}>Stop</button>\n                <button onClick={this.startTimer}>Resume</button>\n                <button onClick={this.resetTimer}>Reset</button>\n            </div>\n        );\n    }\n}\nexport default connect(mapReduxStoreToProps)(MasterCountdown);"]},"metadata":{},"sourceType":"module"}